from aiohttp.web import Request, Response, json_response, FileResponse
from setezor.app_routes.session import project_require, get_db_by_session, get_project
from setezor.app_routes.api.base_web_view import BaseView
from setezor.modules.application import PMRequest
from base64 import b64decode
import os


class ResourceVulnerabilityScreenshotView(BaseView):
    endpoint = '/resource-vulnerability-screenshot'
    queries_path = 'resource-vulnerability-screenshot'

    @BaseView.route('GET', '/{id}')
    @project_require
    async def get_screenshot_file(self, request: PMRequest):
        id = int(request.match_info.get('id'))
        db = await get_db_by_session(request=request)
        screenshot = db.vuln_res_soft_screenshot.get_by_id(id=id)
        return FileResponse(screenshot.path)
        
    @BaseView.route('DELETE', '/{id}')
    @project_require
    async def delete_screenshot(self, request: PMRequest):
        id = int(request.match_info.get('id'))
        db = await get_db_by_session(request=request)
        el = db.vuln_res_soft_screenshot.get_by_id(id=id)
        resource_vuln_id = el.resource_vulnerability_id
        path = el.path
        db.vuln_res_soft_screenshot.delete_by_id(id=id)
        os.remove(path)
        screenshots_cnt = len(db.vuln_res_soft.get_screenshots(resource_vuln_id = resource_vuln_id))
        return json_response(status=200,data=screenshots_cnt)

