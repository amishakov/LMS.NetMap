

from sqlalchemy import func, text
from setezor.models import Vulnerability
from setezor.repositories import SQLAlchemyRepository
from sqlmodel import SQLModel, select
from sqlalchemy.orm import aliased
from sqlalchemy.engine.result import ScalarResult

class VulnerabilityRepository(SQLAlchemyRepository[Vulnerability]):
    model = Vulnerability

    async def exists(self, mac_obj: SQLModel):
        return False
    
    async def get_vulnerabilities(self, project_id: str, limit: int | None = None):
        """Запрос на получение самых распространенных значений в колонке."""

        # Создаем alias для COALESCE
        vulnerabilities_alias = aliased(Vulnerability)

        query = (
            select(
                Vulnerability.name,
                Vulnerability.cve,
                Vulnerability.description,
                func.coalesce(Vulnerability.cvss4_score, Vulnerability.cvss3_score, Vulnerability.cvss2_score).label('cvss_score')
            )
            .filter(self.model.project_id == project_id)
            .where(
                Vulnerability.project_id == project_id,
                func.coalesce(Vulnerability.cvss4_score, Vulnerability.cvss3_score, Vulnerability.cvss2_score).isnot(None)
            )
            .order_by(func.coalesce(Vulnerability.cvss4_score, Vulnerability.cvss3_score, Vulnerability.cvss2_score).desc())
        )

        result = await self._session.exec(query)
        vulnerabilities = result.fetchall()
        
        return vulnerabilities